[tool.poetry]
name = "anjani"
version = "2.3.1"
description = "Telegram group management bot"
license = "GPL-3.0-or-later"
authors = ["UserbotIndo Team"]
readme = "README.md"
homepage = "https://github.com/userbotindo/anjani#readme"
repository = "https://github.com/userbotindo/anjani"
documentation = "https://github.com/userbotindo/Anjani/wiki"
keywords = ["chatbot", "bot", "python", "telegram-bot", "pyrogram"]
classifiers = [
    "Environment :: Console",
    "Framework :: AsyncIO",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Communications",
    "Topic :: Communications :: Chat",
]

[tool.poetry.scripts]
anjani = "anjani.main:start"

[tool.poetry.dependencies]
python = "^3.8, <3.10"
PyYAML = "^6.0"
aiohttp = "^3.8.1"
aiorun = "^2022.4.1"
colorlog = "^6.6.0"
dnspython = "^2.2.1"
Pyrogram = "^2.0.33"
python-dotenv = "^0.20.0"
TgCrypto = "^1.2.3"
uvloop = {version ="^0.16.0", optional = true}
aiopath = "<0.6"
pymongo = "^4.1.1"
scikit-learn = {version = "1.1.1", optional = true}
meval = "^2.5"
scipy = {version = "^1.8.1", optional = true}

[tool.poetry.dev-dependencies]
black = "^22.6"
pre-commit = "^2.20.0"
pylint = "^2.14.4"
isort = "^5.10.1"

[tool.poetry.extras]
all = ["scikit-learn", "uvloop", "scipy"]
ml = ["scikit-learn", "scipy"]
uvloop = ["uvloop"]


#
# Black config
#
[tool.black]
line-length = 100
target-version = ["py38"]

#
# Isort Config
#
[tool.isort]
profile = "black"
known_third_party = ["aiohttp", "aiopath", "aiorun", "colorlog", "dotenv", "pymongo", "pyrogram", "yaml"]

#
# Pylint Config
#
[tool.pylint]
    [tool.pylint.messages_control]
    disable = [
        "attribute-defined-outside-init",
        "too-few-public-methods",
        "missing-class-docstring",
        "logging-fstring-interpolation",
    ]

    [tool.pylint.reports]
    output-format = "colorized"

    [tool.pylint.logging]
    logging-format-style = "new"

    [tool.pylint.format]
    max-line-length = 100

    [tool.pylint.design]
    max-args = 15


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
